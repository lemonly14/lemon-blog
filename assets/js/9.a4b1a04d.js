(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{208:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"css-行高-line-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-行高-line-height","aria-hidden":"true"}},[t._v("#")]),t._v(" css 行高 line-height")]),t._v(" "),a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("“行高”顾名思义指一行代码的高度。具体来说是指两行文字间基线之间的距离。基线实在英文字母中用到的一个概念，我们刚学英语的时使用的那个英语本子每行有四条线，其中底部第二条线就是基线，是 a,c,z,x 等字母的底边线。下图的红色线即为基线。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lemonly14/blog-img/master/CSS_img/css-line-hight-img/Baseline.png",alt:"基线图"}})]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提醒")]),t._v(" "),a("p",[t._v("vertical-align 中有 top,middle,baseline,bottom 与之是由关联的")])]),t._v(" "),a("h3",{attrs:{id:"line-height-与-line-boxes-高度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#line-height-与-line-boxes-高度","aria-hidden":"true"}},[t._v("#")]),t._v(" line-height 与 line boxes 高度")]),t._v(" "),a("p",[a("strong",[t._v("CSS")]),t._v("中起高度作用的应该就是"),a("em",[t._v("height")]),t._v("以及"),a("em",[t._v("line-height")]),t._v("了吧！如果一个标签没有定义"),a("em",[t._v("height")]),t._v("属性(包括百分比高度)，那么其最终表现的高度一定是由"),a("strong",[t._v("line-height")]),t._v("起作用，即使是 IE6 下 11 像素左右默认高度 bug 也是如此。待我慢慢叙来。")]),t._v(" "),a("p",[t._v("先说一个大家都熟知的现象，有一个空的 div，如果没有设置至少大于 1 像素高度"),a("strong",[t._v("height")]),t._v("值时，该 div 的高度就是个 0。如果该 div 里面打入了一个空格或是文字，则此 div 就会有一个高度。那么您思考过没有，为什么 div 里面有文字后就会有高度呢？")]),t._v(" "),a("p",[t._v("这是个看上去很简单的问题，是理解"),a("strong",[t._v("line-height")]),t._v("非常重要的一个问题。可能有人会跟认为是：文字撑开的！文字占据空间，自然将 div 撑开。我一开始也是这样理解的，但是事实上，深入理解"),a("strong",[t._v("inline")]),t._v("模型后，我发现，根本不是文字撑开了 div 的高度，而是"),a("strong",[t._v("line-height")]),t._v("！要证明很简单(如下测试代码)：")]),t._v(" "),a("div",{staticClass:"language-CSS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1px solid #cccccc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#eeeeee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1px solid #cccccc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#eeeeee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("测试"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("测试"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("结果如下图:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lemonly14/blog-img/master/CSS_img/css-line-hight-img/test1.png",alt:"测试图"}})]),t._v(" "),a("p",[t._v("结果是如此的显而易见，"),a("strong",[t._v("test1 div")]),t._v("有文字大小，但行高为 0，结果 div 的高度就是个 0；"),a("strong",[t._v("test2 div")]),t._v("文字大小为 0，但是有行高，为 20 像素，结果 div 高度就是 20 像素。这就说明撑开 div 高度的是"),a("strong",[t._v("line-height")]),t._v("不是文字内容。")]),t._v(" "),a("p",[t._v("到底这个"),a("strong",[t._v("line-height")]),t._v("行高怎么就产生了高度呢？在"),a("strong",[t._v("inline box")]),t._v("模型中，有个"),a("strong",[t._v("line boxes")]),t._v("，这玩意是看不见的，这个玩意的工作就是包裹每行文字。一行文字一个"),a("strong",[t._v("line boxes")]),t._v("。例如“艾佛森退役”这 5 个字，如果它们在一行显示，你艾佛森再牛逼，对不起，只有一个"),a("strong",[t._v("line boxes")]),t._v("罩着你；但“春哥纯爷们”这 5 个字，要是竖着写，一行一个，那真是够爷们，一个字罩着一个"),a("strong",[t._v("line boxes")]),t._v("，于是总计五个"),a("strong",[t._v("line boxes")]),t._v("。"),a("strong",[t._v("line boxes")]),t._v("什么特性也没有，就高度。所以一个没有设置 height 属性的 div 的高度就是由一个一个"),a("strong",[t._v("line boxes")]),t._v("的高度堆积而成的。")]),t._v(" "),a("p",[t._v("其实 line boxes 不是直接的生产者，属于中层干部，真正的活儿都是它的手下 – "),a("strong",[t._v("inline boxes")]),t._v(" 干的，这些手下就是文字啦，图片啊，"),a("code",[t._v("<span>")]),t._v("之类的 inline 属性的标签啦。line boxes 只是个考察汇报人员，考察它的手下谁的实际 "),a("strong",[t._v("line-height")]),t._v(" 值最高，谁最高，它就要谁的值，然后向上汇报，形成高度。例如，"),a("code",[t._v('<span style="line-height:20px;">')]),t._v("取手下 "),a("strong",[t._v("line-height")]),a("code",[t._v('<span style="line-height:40px;">')]),t._v("最高"),a("code",[t._v("</span>")]),t._v("的值"),a("code",[t._v("</span>")]),t._v("。则 line boxes 的高度就是 40 像素了。")]),t._v(" "),a("h3",{attrs:{id:"行高的垂直居中性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行高的垂直居中性","aria-hidden":"true"}},[t._v("#")]),t._v(" 行高的垂直居中性")]),t._v(" "),a("p",[t._v("行高还有一个特性，叫做垂直居中性。"),a("strong",[t._v("line-height")]),t._v("的最终表现是通过"),a("strong",[t._v("line boxes")]),t._v("实现的，而无论"),a("strong",[t._v("line boxes")]),t._v("所占据的高度是多少（无论比文字大还是比文字小），其占据的空间都是与文字内容公用水平中垂线的。还拿上面这张图来说吧。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lemonly14/blog-img/master/CSS_img/css-line-hight-img/test2.png",alt:"测试图"}})])])},[],!1,null,null,null);s.default=n.exports}}]);